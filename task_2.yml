- name: Create a sandbox instance
  hosts: localhost
  connection: local
  become: false # Don't use sudo
  gather_facts: False
  vars:
    key_name: MyKeyPair # This will have to be your own key I think
    instance_type: t2.micro
    security_group: my-new-security-group
    image: ami-39f8215b
    region: ap-southeast-2
  tasks:
    - name: Create a security group
      local_action:
        module: ec2_group
        name: "{{ security_group }}"
        description: Security Group for webserver Servers
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
      register: basic_firewall

    - name: Launch instance
      ec2:
         key_name: "{{ key_name }}"
         group: "{{ security_group }}"
         instance_type: "{{ instance_type }}"
         image: "{{ image }}"
         wait: true
         region: "{{ region }}"
      register: ec2

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: launched
      with_items: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      delegate_to: "{{ item.public_dns_name }}"
      wait_for_connection:
        delay: 60
        timeout: 300
      with_items: "{{ ec2.instances }}"

- name: "Install updates/PHP/Apache/MariaDB"
  hosts: launched
  become: yes
  gather_facts: yes
  become_user: root
  tasks:
    - name: install package updates
      yum:
        name: '*'
        state: latest

    - name: install PHP
      command: amazon-linux-extras install -y lamp-mariadb10.2-php7.2 php7.2

    - name: install Apache and MariaDB
      yum:
        name: "{{ packages }}"
      vars:
        packages:
        - httpd
        - mariadb-server

- name: "Start and enable Apache"
  hosts: launched
  become: yes
  become_user: root
  tasks:
    - name: Start Apache server
      service:
        name: httpd
        state: started
        enabled: yes
